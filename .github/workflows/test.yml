name: Test Tower Defense Game

on:
  push:
    branches: [ main, develop ]
  pull_request:
    branches: [ main, develop ]

jobs:
  test:
    timeout-minutes: 60
    runs-on: ubuntu-latest
    strategy:
      fail-fast: false
      matrix:
        shardIndex: [1, 2, 3, 4]
        shardTotal: [4]
        # Add more shards (total) if you have more tests
        # shardIndex: [1, 2, 3, 4, 5, 6, 7, 8]
        # shardTotal: [8]

    steps:
    - uses: actions/checkout@v4
    
    - uses: actions/setup-node@v4
      with:
        node-version: 18
        cache: 'npm'
    
    - name: Install dependencies
      run: npm ci
    
    - name: Install Playwright Browsers
      run: npx playwright install --with-deps
    
    - name: Build project
      run: npm run build
    
    - name: Start development server
      run: |
        npm run dev &
        npx wait-on http://localhost:5173
    
    - name: Run Playwright tests
      run: npx playwright test --shard=${{ matrix.shardIndex }}/${{ matrix.shardTotal }}
      env:
        CI: true
    
    - uses: actions/upload-artifact@v4
      if: always()
      with:
        name: playwright-report-${{ matrix.shardIndex }}
        path: |
          playwright-report/
          test-results/
        retention-days: 30

  test-on-stable:
    timeout-minutes: 60
    runs-on: ubuntu-latest
    needs: test
    if: github.event_name == 'push' && github.ref == 'refs/heads/main'

    steps:
    - uses: actions/checkout@v4
    
    - uses: actions/setup-node@v4
      with:
        node-version: 18
        cache: 'npm'
    
    - name: Install dependencies
      run: npm ci
    
    - name: Install Playwright Browsers
      run: npx playwright install --with-deps
    
    - name: Build project
      run: npm run build
    
    - name: Start development server
      run: |
        npm run dev &
        npx wait-on http://localhost:5173
    
    - name: Run Playwright tests on stable browsers
      run: npx playwright test --project=chromium --project=firefox --project=webkit
      env:
        CI: true
    
    - uses: actions/upload-artifact@v4
      if: always()
      with:
        name: playwright-report-stable
        path: |
          playwright-report/
          test-results/
        retention-days: 30

  test-mobile:
    timeout-minutes: 60
    runs-on: ubuntu-latest
    needs: test
    if: github.event_name == 'push' && github.ref == 'refs/heads/main'

    steps:
    - uses: actions/checkout@v4
    
    - uses: actions/setup-node@v4
      with:
        node-version: 18
        cache: 'npm'
    
    - name: Install dependencies
      run: npm ci
    
    - name: Install Playwright Browsers
      run: npx playwright install --with-deps
    
    - name: Build project
      run: npm run build
    
    - name: Start development server
      run: |
        npm run dev &
        npx wait-on http://localhost:5173
    
    - name: Run Playwright tests on mobile browsers
      run: npx playwright test --project="Mobile Chrome" --project="Mobile Safari"
      env:
        CI: true
    
    - uses: actions/upload-artifact@v4
      if: always()
      with:
        name: playwright-report-mobile
        path: |
          playwright-report/
          test-results/
        retention-days: 30

  report:
    timeout-minutes: 60
    runs-on: ubuntu-latest
    needs: [test, test-on-stable, test-mobile]
    if: always()

    steps:
    - uses: actions/checkout@v4
    
    - uses: actions/setup-node@v4
      with:
        node-version: 18
        cache: 'npm'
    
    - name: Install dependencies
      run: npm ci
    
    - name: Download all results
      uses: actions/download-artifact@v4
      with:
        path: all-results/
    
    - name: Merge results
      run: npx playwright merge-reports ./all-results --reporter html,json,junit
    
    - uses: actions/upload-artifact@v4
      with:
        name: playwright-report
        path: |
          playwright-report/
          test-results/
        retention-days: 30 